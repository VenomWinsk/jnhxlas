<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxht.logprocess.logbulk.dao.DirRecordsMapper">
    <resultMap id="BaseResultMap" type="com.hxht.logprocess.logbulk.model.DirRecords">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="used_rule_group_id" jdbcType="VARCHAR" property="usedRuleGroupId"/>
        <result column="dirname" jdbcType="VARCHAR" property="dirname"/>
        <result column="wasscanned" jdbcType="INTEGER" property="wasscanned"/>
        <result column="dir_status" jdbcType="INTEGER" property="dirStatus"/>
        <result column="filenums" jdbcType="INTEGER" property="filenums"/>
        <result column="jumpnums" jdbcType="INTEGER" property="jumpnums"/>
        <result column="processednums" jdbcType="INTEGER" property="processednums"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , used_rule_group_id, dirname, wasscanned, dir_status, filenums, jumpnums, processednums
    </sql>
    <select id="selectByExample" parameterType="com.hxht.logprocess.logbulk.model.DirRecordsExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from dir_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dir_records
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectByUsedGroupId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *
        from dir_records
        where used_rule_group_id = #{ruleGroupId}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from dir_records
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteFiles" parameterType="java.lang.String">
        DELETE
        dir_records,file_records from dir_records,file_records where dir_records.used_rule_group_id=#{used_rule_group_id,jdbcType=VARCHAR} and dir_records.id=file_records.filedir_id;
    </delete>
    <delete id="deleteByExample" parameterType="com.hxht.logprocess.logbulk.model.DirRecordsExample">
        delete from dir_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hxht.logprocess.logbulk.model.DirRecords">
        insert into dir_records (id, used_rule_group_id, dirname,
                                 wasscanned, dir_status, filenums,
                                 jumpnums, processednums)
        values (#{id,jdbcType=VARCHAR}, #{usedRuleGroupId,jdbcType=VARCHAR}, #{dirname,jdbcType=VARCHAR},
                #{wasscanned,jdbcType=INTEGER}, #{dirStatus,jdbcType=INTEGER}, #{filenums,jdbcType=INTEGER},
                #{jumpnums,jdbcType=INTEGER}, #{processednums,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.hxht.logprocess.logbulk.model.DirRecords">
        insert into dir_records
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="usedRuleGroupId != null">
                used_rule_group_id,
            </if>
            <if test="dirname != null">
                dirname,
            </if>
            <if test="wasscanned != null">
                wasscanned,
            </if>
            <if test="dirStatus != null">
                dir_status,
            </if>
            <if test="filenums != null">
                filenums,
            </if>
            <if test="jumpnums != null">
                jumpnums,
            </if>
            <if test="processednums != null">
                processednums,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="usedRuleGroupId != null">
                #{usedRuleGroupId,jdbcType=VARCHAR},
            </if>
            <if test="dirname != null">
                #{dirname,jdbcType=VARCHAR},
            </if>
            <if test="wasscanned != null">
                #{wasscanned,jdbcType=INTEGER},
            </if>
            <if test="dirStatus != null">
                #{dirStatus,jdbcType=INTEGER},
            </if>
            <if test="filenums != null">
                #{filenums,jdbcType=INTEGER},
            </if>
            <if test="jumpnums != null">
                #{jumpnums,jdbcType=INTEGER},
            </if>
            <if test="processednums != null">
                #{processednums,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hxht.logprocess.logbulk.model.DirRecordsExample"
            resultType="java.lang.Long">
        select count(*) from dir_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update dir_records
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.usedRuleGroupId != null">
                used_rule_group_id = #{record.usedRuleGroupId,jdbcType=VARCHAR},
            </if>
            <if test="record.dirname != null">
                dirname = #{record.dirname,jdbcType=VARCHAR},
            </if>
            <if test="record.wasscanned != null">
                wasscanned = #{record.wasscanned,jdbcType=INTEGER},
            </if>
            <if test="record.dirStatus != null">
                dir_status = #{record.dirStatus,jdbcType=INTEGER},
            </if>
            <if test="record.filenums != null">
                filenums = #{record.filenums,jdbcType=INTEGER},
            </if>
            <if test="record.jumpnums != null">
                jumpnums = #{record.jumpnums,jdbcType=INTEGER},
            </if>
            <if test="record.processednums != null">
                processednums = #{record.processednums,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update dir_records
        set id = #{record.id,jdbcType=VARCHAR},
        used_rule_group_id = #{record.usedRuleGroupId,jdbcType=VARCHAR},
        dirname = #{record.dirname,jdbcType=VARCHAR},
        wasscanned = #{record.wasscanned,jdbcType=INTEGER},
        dir_status = #{record.dirStatus,jdbcType=INTEGER},
        filenums = #{record.filenums,jdbcType=INTEGER},
        jumpnums = #{record.jumpnums,jdbcType=INTEGER},
        processednums = #{record.processednums,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hxht.logprocess.logbulk.model.DirRecords">
        update dir_records
        <set>
            <if test="usedRuleGroupId != null">
                used_rule_group_id = #{usedRuleGroupId,jdbcType=VARCHAR},
            </if>
            <if test="dirname != null">
                dirname = #{dirname,jdbcType=VARCHAR},
            </if>
            <if test="wasscanned != null">
                wasscanned = #{wasscanned,jdbcType=INTEGER},
            </if>
            <if test="dirStatus != null">
                dir_status = #{dirStatus,jdbcType=INTEGER},
            </if>
            <if test="filenums != null">
                filenums = #{filenums,jdbcType=INTEGER},
            </if>
            <if test="jumpnums != null">
                jumpnums = #{jumpnums,jdbcType=INTEGER},
            </if>
            <if test="processednums != null">
                processednums = #{processednums,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hxht.logprocess.logbulk.model.DirRecords">
        update dir_records
        set used_rule_group_id = #{usedRuleGroupId,jdbcType=VARCHAR},
            dirname            = #{dirname,jdbcType=VARCHAR},
            wasscanned         = #{wasscanned,jdbcType=INTEGER},
            dir_status         = #{dirStatus,jdbcType=INTEGER},
            filenums           = #{filenums,jdbcType=INTEGER},
            jumpnums           = #{jumpnums,jdbcType=INTEGER},
            processednums      = #{processednums,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>