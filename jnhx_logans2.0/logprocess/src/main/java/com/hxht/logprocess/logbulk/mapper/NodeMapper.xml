<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxht.logprocess.logbulk.dao.NodeMapper">
  <resultMap id="BaseResultMap" type="com.hxht.logprocess.logbulk.model.Node">
    <id column="node_id" jdbcType="CHAR" property="nodeId" />
    <id column="node_ip" jdbcType="VARCHAR" property="nodeIp" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="node_config" jdbcType="VARCHAR" property="nodeConfig" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="is_enabled" jdbcType="INTEGER" property="isEnabled" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    node_id, node_ip, node_name, node_config, creator, gmt_create, gmt_modified, is_enabled
  </sql>
  <select id="selectByExample" parameterType="com.hxht.logprocess.logbulk.model.NodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit #{from},#{size}
  </select>

  <select id="selectByConditions" parameterType="com.hxht.logprocess.logbulk.model.Node" resultMap="BaseResultMap">
    select * from node limit #{from},#{size}
  </select>
  <select id="selectByPrimaryKey" parameterType="com.hxht.logprocess.logbulk.model.NodeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from node
    where node_id = #{nodeId,jdbcType=CHAR}
      and node_ip = #{nodeIp,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.hxht.logprocess.logbulk.model.NodeKey">
    delete from node
    where node_id = #{nodeId,jdbcType=CHAR}
      and node_ip = #{nodeIp,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hxht.logprocess.logbulk.model.NodeExample">
    delete from node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hxht.logprocess.logbulk.model.Node">
    insert into node (node_id, node_ip, node_name, 
      node_config, creator, gmt_create, 
      gmt_modified, is_enabled)
    values (#{nodeId,jdbcType=CHAR}, #{nodeIp,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, 
      #{nodeConfig,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{isEnabled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hxht.logprocess.logbulk.model.Node">
    insert into node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="nodeIp != null">
        node_ip,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="nodeConfig != null">
        node_config,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="isEnabled != null">
        is_enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        #{nodeId,jdbcType=CHAR},
      </if>
      <if test="nodeIp != null">
        #{nodeIp,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="nodeConfig != null">
        #{nodeConfig,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null">
        #{isEnabled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hxht.logprocess.logbulk.model.NodeExample" resultType="java.lang.Long">
    select count(*) from node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update node
    <set>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=CHAR},
      </if>
      <if test="record.nodeIp != null">
        node_ip = #{record.nodeIp,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeName != null">
        node_name = #{record.nodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeConfig != null">
        node_config = #{record.nodeConfig,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isEnabled != null">
        is_enabled = #{record.isEnabled,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update node
    set node_id = #{record.nodeId,jdbcType=CHAR},
      node_ip = #{record.nodeIp,jdbcType=VARCHAR},
      node_name = #{record.nodeName,jdbcType=VARCHAR},
      node_config = #{record.nodeConfig,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      is_enabled = #{record.isEnabled,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxht.logprocess.logbulk.model.Node">
    update node
    <set>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="nodeConfig != null">
        node_config = #{nodeConfig,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null">
        is_enabled = #{isEnabled,jdbcType=INTEGER},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=CHAR}
      and node_ip = #{nodeIp,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxht.logprocess.logbulk.model.Node">
    update node
    set node_name = #{nodeName,jdbcType=VARCHAR},
      node_config = #{nodeConfig,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      is_enabled = #{isEnabled,jdbcType=INTEGER}
    where node_id = #{nodeId,jdbcType=CHAR}
      and node_ip = #{nodeIp,jdbcType=VARCHAR}
  </update>
</mapper>