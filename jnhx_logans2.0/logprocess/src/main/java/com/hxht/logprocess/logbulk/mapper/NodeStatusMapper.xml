<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxht.logprocess.logbulk.dao.NodeStatusMapper">
  <resultMap id="BaseResultMap" type="com.hxht.logprocess.logbulk.model.NodeStatus">
    <result column="node_ip" jdbcType="VARCHAR" property="nodeIp" />
    <result column="is_alive" jdbcType="INTEGER" property="isAlive" />
    <result column="cpu_rate" jdbcType="DECIMAL" property="cpuRate" />
    <result column="avalible_dist" jdbcType="DECIMAL" property="avalibleDist" />
    <result column="all_dist" jdbcType="DECIMAL" property="allDist" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    node_ip, is_alive, cpu_rate, avalible_dist, all_dist, gmt_create
  </sql>
  <select id="selectByExample" parameterType="com.hxht.logprocess.logbulk.model.NodeStatusExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from node_status
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit #{from},#{size}
  </select>


  <select id="selectByConditions" parameterType="com.hxht.logprocess.logbulk.model.NodeStatus" resultMap="BaseResultMap">
    select * from node_status limit #{from},#{size}
  </select>

  <delete id="deleteByExample" parameterType="com.hxht.logprocess.logbulk.model.NodeStatusExample">
    delete from node_status
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hxht.logprocess.logbulk.model.NodeStatus">
    insert into node_status (node_ip, is_alive, cpu_rate, 
      avalible_dist, all_dist, gmt_create
      )
    values (#{nodeIp,jdbcType=VARCHAR}, #{isAlive,jdbcType=INTEGER}, #{cpuRate,jdbcType=DECIMAL}, 
      #{avalibleDist,jdbcType=DECIMAL}, #{allDist,jdbcType=DECIMAL}, #{gmtCreate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hxht.logprocess.logbulk.model.NodeStatus">
    insert into node_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeIp != null">
        node_ip,
      </if>
      <if test="isAlive != null">
        is_alive,
      </if>
      <if test="cpuRate != null">
        cpu_rate,
      </if>
      <if test="avalibleDist != null">
        avalible_dist,
      </if>
      <if test="allDist != null">
        all_dist,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeIp != null">
        #{nodeIp,jdbcType=VARCHAR},
      </if>
      <if test="isAlive != null">
        #{isAlive,jdbcType=INTEGER},
      </if>
      <if test="cpuRate != null">
        #{cpuRate,jdbcType=DECIMAL},
      </if>
      <if test="avalibleDist != null">
        #{avalibleDist,jdbcType=DECIMAL},
      </if>
      <if test="allDist != null">
        #{allDist,jdbcType=DECIMAL},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hxht.logprocess.logbulk.model.NodeStatusExample" resultType="java.lang.Long">
    select count(*) from node_status
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update node_status
    <set>
      <if test="record.nodeIp != null">
        node_ip = #{record.nodeIp,jdbcType=VARCHAR},
      </if>
      <if test="record.isAlive != null">
        is_alive = #{record.isAlive,jdbcType=INTEGER},
      </if>
      <if test="record.cpuRate != null">
        cpu_rate = #{record.cpuRate,jdbcType=DECIMAL},
      </if>
      <if test="record.avalibleDist != null">
        avalible_dist = #{record.avalibleDist,jdbcType=DECIMAL},
      </if>
      <if test="record.allDist != null">
        all_dist = #{record.allDist,jdbcType=DECIMAL},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update node_status
    set node_ip = #{record.nodeIp,jdbcType=VARCHAR},
      is_alive = #{record.isAlive,jdbcType=INTEGER},
      cpu_rate = #{record.cpuRate,jdbcType=DECIMAL},
      avalible_dist = #{record.avalibleDist,jdbcType=DECIMAL},
      all_dist = #{record.allDist,jdbcType=DECIMAL},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>