{"remainingRequest":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/babel-loader/lib/index.js!/home/hx_ygg/job/hx_logana3.0/web/node_modules/eslint-loader/index.js??ref--13-0!/home/hx_ygg/job/hx_logana3.0/web/src/utils/util.js","dependencies":[{"path":"/home/hx_ygg/job/hx_logana3.0/web/src/utils/util.js","mtime":1631238422177},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvaHhfeWdnL2pvYi9oeF9sb2dhbmEzLjAvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIjsKCi8qKgogKiDlt6Xlhbflh73mlbAgLSDmnYLnr4cKICovCgovKioKICog5qC55o2u54i26Lev55Sx5ZCN5p+l6K+i5a2Q6Lev55Sx5YiX6KGoCiAqIEBwYXJhbSB7QXJyYXk8TGlzdD59IGFsbFJvdXRlcyDot6/nlLHliJfooajmlbDmja4KICogQHBhcmFtIHtTdHJpbmd9IG5hbWUg54i26Lev55SxbmFtZeWQjQogKiBAcmV0dXJucyDot6/nlLHliJfooagKICovCi8vIGV4cG9ydCBjb25zdCBnZXRDaGlsZFJvdXRlcnNCeVBhcmVudE5hbWUgPSAoYWxsUm91dGVzLCBuYW1lKSA9PiB7Ci8vIH07CgovKioKICog5qC55o2u5ou/5Yiw55qE5YiG5p6Q5a+56LGhLeinhOWImee7hC3op4TliJnlvaLmiJDmlbDmja7nu5PmnoQKICogQHBhcmFtIHtBcnJheTxhbnk+fSBkYXRhIOWQjuWPsOi/lOWbnueahGdyb2tl5pWw5o2uCiAqLwpleHBvcnQgdmFyIHNldFRyZWVCeUdyb2tlRGF0YSA9IGZ1bmN0aW9uIHNldFRyZWVCeUdyb2tlRGF0YShkYXRhKSB7CiAgLy8g55u05o6l6YGN5Y6G5LiJ5bGCCiAgdmFyIHRyZWVEYXRhID0gW107CiAgdHJlZURhdGEgPSBkYXRhLm1hcChmdW5jdGlvbiAobGlzdCkgewogICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7CiAgICAgIGlkOiBsaXN0LmFuYV9pZCwKICAgICAgaWRLZXk6ICdhbmEnICsgbGlzdC5hbmFfaWQsCiAgICAgIHBJZDogJ3Jvb3QnLAogICAgICBwSWRLZXk6ICdyb290JywKICAgICAgb3duZXJUeXBlOiAwLAogICAgICB0aXRsZTogbGlzdC5hbmFfbmFtZSwKICAgICAgbmFtZTogbGlzdC5hbmFfbmFtZQogICAgfSwgbGlzdCksIHt9LCB7CiAgICAgIGV4cGFuZDogdHJ1ZSwKICAgICAgaWRBcnI6IFtsaXN0LmFuYV9pZF0sCiAgICAgIGNoaWxkcmVuOiBsaXN0LnJ1bGVncm91cF9zZXQubGVuZ3RoID09IDAgPyBbXSA6IGxpc3QucnVsZWdyb3VwX3NldC5tYXAoZnVuY3Rpb24gKGxpc3QyKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7CiAgICAgICAgICBpZDogbGlzdDIucnVsZWdyb3VwX2lkLAogICAgICAgICAgaWRLZXk6ICdyZycgKyBsaXN0Mi5ydWxlZ3JvdXBfaWQsCiAgICAgICAgICBwSWQ6IGxpc3QuYW5hX2lkLAogICAgICAgICAgcElkS2V5OiAnYW5hJyArIGxpc3QuYW5hX2lkLAogICAgICAgICAgb3duZXJUeXBlOiAxLAogICAgICAgICAgdGl0bGU6IGxpc3QyLnJ1bGVncm91cF9uYW1lLAogICAgICAgICAgbmFtZTogbGlzdDIucnVsZWdyb3VwX25hbWUKICAgICAgICB9LCBsaXN0MiksIHt9LCB7CiAgICAgICAgICBpZEFycjogW2xpc3QuYW5hX2lkLCBsaXN0Mi5ydWxlZ3JvdXBfaWRdLAogICAgICAgICAgY2hpbGRyZW46IGxpc3QyLnJ1bGVfc2V0Lmxlbmd0aCA9PT0gMCA/IFtdIDogbGlzdDIucnVsZV9zZXQubWFwKGZ1bmN0aW9uIChsaXN0MykgewogICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgICAgICAgICAgICBpZDogbGlzdDMucnVsZV9pZCwKICAgICAgICAgICAgICBpZEtleTogJ3InICsgbGlzdDMucnVsZV9pZCwKICAgICAgICAgICAgICBwSWQ6IGxpc3QyLnJ1bGVncm91cF9pZCwKICAgICAgICAgICAgICBwSWRLZXk6ICdyZycgKyBsaXN0Mi5ydWxlZ3JvdXBfaWQsCiAgICAgICAgICAgICAgb3duZXJUeXBlOiAyLAogICAgICAgICAgICAgIHRpdGxlOiBsaXN0My5ydWxlX25hbWUsCiAgICAgICAgICAgICAgbmFtZTogbGlzdDMucnVsZV9uYW1lCiAgICAgICAgICAgIH0sIGxpc3QzKSwge30sIHsKICAgICAgICAgICAgICBpZEFycjogW2xpc3QuYW5hX2lkLCBsaXN0Mi5ydWxlZ3JvdXBfaWQsIGxpc3QzLnJ1bGVfaWRdCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSkKICAgICAgICB9KTsKICAgICAgfSkKICAgIH0pOwogIH0pOwogIHJldHVybiB0cmVlRGF0YTsKfTsKLyoqCiAqIOWwhmpzb27mlbDmja7lpITnkIbmiJBUcmVl6IqC54K55pWw5o2uCiAqIEBwYXJhbSB7QXJyYXk8YW55Pn0gZGF0YSDlkI7lj7Dov5Tlm57nmoTlhbfmnInniLblrZDlhbPns7vnmoTmlbDmja4KICogQHJldHVybnMg5qCR5b2i57uT5p6E5pWw5o2uCiAqLwoKZXhwb3J0IHZhciBzZXRUcmVlQnlKc29uID0gZnVuY3Rpb24gc2V0VHJlZUJ5SnNvbihkYXRhKSB7CiAgLy8g6I635Y+W5rKh5pyJ54i26IqC54K555qE5pWw5o2uCiAgdmFyIHBhcmVudHMgPSBkYXRhLmZpbHRlcihmdW5jdGlvbiAobGlzdCkgewogICAgcmV0dXJuIGxpc3QubWFya19waWQgPT09IG51bGw7CiAgfSk7IC8vIOiOt+WPluacieeItuiKgueCueeahOaVsOaNrgoKICB2YXIgY2hpbGRyZW4gPSBkYXRhLmZpbHRlcihmdW5jdGlvbiAobGlzdCkgewogICAgcmV0dXJuIGxpc3QubWFya19waWQgIT09IG51bGw7CiAgfSk7IC8vIOWumuS5ieS4gOS4quaVsOaNrui9rOaNouaWueazlQoKICB2YXIgdHJhbnNmZXIgPSBmdW5jdGlvbiB0cmFuc2ZlcihwYXJlbnRzLCBjaGlsZHJlbikgewogICAgLy8g5Y676YGN5Y6G54i26IqC54K55pWw5o2uCiAgICBwYXJlbnRzLmZvckVhY2goZnVuY3Rpb24gKHBhcmVudCkgewogICAgICAvLyDpgY3ljoblrZDoioLngrnmlbDmja4KICAgICAgY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgICBpZiAocGFyZW50Lm1hcmtfaWQgPT09IGNoaWxkLm1hcmtfcGlkKSB7CiAgICAgICAgICAvLyDliKTmlq3or7TmmI7mmK/lvZPliY3niLboioLngrnnmoTmlbDmja4g5re75Yqg5YiwcGFyZW5055qEY2hpZGxyZW7kuYvkuK0KICAgICAgICAgIHBhcmVudC5jaGlsZHJlbiA/IHBhcmVudC5jaGlsZHJlbi5wdXNoKGNoaWxkKSA6IHBhcmVudC5jaGlsZHJlbiA9IFtjaGlsZF07IC8vIOiuqeW9k+WJjeiKgueCueWGjeWOu+afpeaJvuS7lueahOWtkOiKgueCuSDlj6/pgInmi6nnmoTlhbfmnInniLboioLngrnnmoTmlbDmja7opoHliZTpmaTlvZPliY3oioLngrkKCiAgICAgICAgICB2YXIgbmV3Q2hpbGRyZW4gPSBjaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24gKGxpc3QpIHsKICAgICAgICAgICAgcmV0dXJuIGxpc3QubWFya19pZCAhPT0gY2hpbGQuaWQ7CiAgICAgICAgICB9KTsKICAgICAgICAgIHRyYW5zZmVyKFtjaGlsZF0sIG5ld0NoaWxkcmVuKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSk7CiAgfTsKCiAgdHJhbnNmZXIocGFyZW50cywgY2hpbGRyZW4pOwogIHJldHVybiBwYXJlbnRzOwp9OwovKioKICog5qC55o2u5paH5Lu2dXJs6L+b6KGM5LiL6L29CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGRvd25sb2FkRmlsZU9mZmxpbmUodXJsKSB7CiAgdmFyIGZpbGVuYW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJzsKICB2YXIgZG93bmxvYWRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOyAvLyBsZXQgaHJlZiA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOyAvL+WIm+W7uuS4i+i9veeahOmTvuaOpQogIC8vIGNvbnNvbGUubG9nKGJsb2IpOwoKICBkb3dubG9hZEVsZW1lbnQuaHJlZiA9IHVybDsKICBkb3dubG9hZEVsZW1lbnQuZG93bmxvYWQgPSBmaWxlbmFtZTsgLy/kuIvovb3lkI7mlofku7blkI0KCiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkb3dubG9hZEVsZW1lbnQpOwogIGRvd25sb2FkRWxlbWVudC5jbGljaygpOyAvL+eCueWHu+S4i+i9vQoKICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRvd25sb2FkRWxlbWVudCk7IC8v5LiL6L295a6M5oiQ56e76Zmk5YWD57SgCn0gLy8g6KGo6L6+5byP5Yy56YWN6KeE5YiZ5oyJIOWPmOmHj+WQjSDop4TliJnljLnphY0KCmV4cG9ydCBmdW5jdGlvbiByZWd1bGFyUnVsZXMoc3RyKSB7CiAgdmFyIHJlZyA9IC8uKnsuKj4+W1xkQCMkJV4mKigpPy9cXF0uKn0uKi87CiAgcmV0dXJuIHJlZy50ZXN0KHN0ci50cmltKCkpOwp9"},{"version":3,"sources":["/home/hx_ygg/job/hx_logana3.0/web/src/utils/util.js"],"names":["setTreeByGrokeData","data","treeData","map","list","id","ana_id","idKey","pId","pIdKey","ownerType","title","ana_name","name","expand","idArr","children","rulegroup_set","length","list2","rulegroup_id","rulegroup_name","rule_set","list3","rule_id","rule_name","setTreeByJson","parents","filter","mark_pid","transfer","forEach","parent","child","mark_id","push","newChildren","downloadFileOffline","url","filename","downloadElement","document","createElement","href","download","body","appendChild","click","removeChild","regularRules","str","reg","test","trim"],"mappings":";;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AACxC;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAA,EAAAA,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAS,UAAAC,IAAI,EAAI;AACxB;AACIC,MAAAA,EAAE,EAACD,IAAI,CAACE,MADZ;AAEIC,MAAAA,KAAK,EAAC,QAAQH,IAAI,CAACE,MAFvB;AAGIE,MAAAA,GAAG,EAAC,MAHR;AAIIC,MAAAA,MAAM,EAAC,MAJX;AAKIC,MAAAA,SAAS,EAAC,CALd;AAMIC,MAAAA,KAAK,EAACP,IAAI,CAACQ,QANf;AAOIC,MAAAA,IAAI,EAACT,IAAI,CAACQ;AAPd,OAQOR,IARP;AASIU,MAAAA,MAAM,EAAC,IATX;AAUIC,MAAAA,KAAK,EAAC,CAACX,IAAI,CAACE,MAAN,CAVV;AAWIU,MAAAA,QAAQ,EAAEZ,IAAI,CAACa,aAAL,CAAmBC,MAAnB,IAA6B,CAA7B,GAA+B,EAA/B,GAAkCd,IAAI,CAACa,aAAL,CAAmBd,GAAnB,CAAuB,UAAAgB,KAAK,EAAI;AACxE;AACId,UAAAA,EAAE,EAAEc,KAAK,CAACC,YADd;AAEIb,UAAAA,KAAK,EAAE,OAAOY,KAAK,CAACC,YAFxB;AAGIZ,UAAAA,GAAG,EAAEJ,IAAI,CAACE,MAHd;AAIIG,UAAAA,MAAM,EAAE,QAAQL,IAAI,CAACE,MAJzB;AAKII,UAAAA,SAAS,EAAE,CALf;AAMIC,UAAAA,KAAK,EAAEQ,KAAK,CAACE,cANjB;AAOIR,UAAAA,IAAI,EAACM,KAAK,CAACE;AAPf,WAQOF,KARP;AASIJ,UAAAA,KAAK,EAAC,CAACX,IAAI,CAACE,MAAN,EAAca,KAAK,CAACC,YAApB,CATV;AAUIJ,UAAAA,QAAQ,EAACG,KAAK,CAACG,QAAN,CAAeJ,MAAf,KAA0B,CAA1B,GAA4B,EAA5B,GAAgCC,KAAK,CAACG,QAAN,CAAenB,GAAf,CAAmB,UAAAoB,KAAK,EAAI;AACjE;AACIlB,cAAAA,EAAE,EAAEkB,KAAK,CAACC,OADd;AAEIjB,cAAAA,KAAK,EAAE,MAAMgB,KAAK,CAACC,OAFvB;AAGIhB,cAAAA,GAAG,EAAEW,KAAK,CAACC,YAHf;AAIIX,cAAAA,MAAM,EAAE,OAAOU,KAAK,CAACC,YAJzB;AAKIV,cAAAA,SAAS,EAAE,CALf;AAMIC,cAAAA,KAAK,EAAEY,KAAK,CAACE,SANjB;AAOIZ,cAAAA,IAAI,EAAEU,KAAK,CAACE;AAPhB,eAQOF,KARP;AASIR,cAAAA,KAAK,EAAC,CAACX,IAAI,CAACE,MAAN,EAAca,KAAK,CAACC,YAApB,EAAiCG,KAAK,CAACC,OAAvC;AATV;AAWH,WAZwC;AAV7C;AAwBH,OAzB2C;AAXhD;AAsCH,GAvCU,CAAX;AAwCA,SAAOtB,QAAP;AACH,CA5CM;AA8CP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMwB,aAAa,GAAG,SAAhBA,aAAgB,CAACzB,IAAD,EAAU;AACnC;AACA,MAAI0B,OAAO,GAAG1B,IAAI,CAAC2B,MAAL,CAAY,UAAAxB,IAAI;AAAA,WAAIA,IAAI,CAACyB,QAAL,KAAkB,IAAtB;AAAA,GAAhB,CAAd,CAFmC,CAGnC;;AACA,MAAIb,QAAQ,GAAGf,IAAI,CAAC2B,MAAL,CAAY,UAAAxB,IAAI;AAAA,WAAIA,IAAI,CAACyB,QAAL,KAAkB,IAAtB;AAAA,GAAhB,CAAf,CAJmC,CAKnC;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAEH,OAAF,EAAWX,QAAX,EAAyB;AACtC;AACAW,IAAAA,OAAO,CAACI,OAAR,CAAgB,UAACC,MAAD,EAAY;AACxB;AACAhB,MAAAA,QAAQ,CAACe,OAAT,CAAiB,UAACE,KAAD,EAAW;AACxB,YAAGD,MAAM,CAACE,OAAP,KAAmBD,KAAK,CAACJ,QAA5B,EAAqC;AACjC;AACAG,UAAAA,MAAM,CAAChB,QAAP,GAAgBgB,MAAM,CAAChB,QAAP,CAAgBmB,IAAhB,CAAqBF,KAArB,CAAhB,GAA4CD,MAAM,CAAChB,QAAP,GAAkB,CAACiB,KAAD,CAA9D,CAFiC,CAGjC;;AACA,cAAIG,WAAW,GAAGpB,QAAQ,CAACY,MAAT,CAAgB,UAACxB,IAAD;AAAA,mBAAUA,IAAI,CAAC8B,OAAL,KAAiBD,KAAK,CAAC5B,EAAjC;AAAA,WAAhB,CAAlB;AACAyB,UAAAA,QAAQ,CAAC,CAACG,KAAD,CAAD,EAAUG,WAAV,CAAR;AACH;AACJ,OARD;AASH,KAXD;AAYH,GAdD;;AAeAN,EAAAA,QAAQ,CAACH,OAAD,EAASX,QAAT,CAAR;AACA,SAAOW,OAAP;AACH,CAvBM;AAwBP;AACA;AACA;;AACC,OAAO,SAASU,mBAAT,CAA6BC,GAA7B,EAAiD;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AACrD,MAAIC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAtB,CADqD,CAErD;AACA;;AACAF,EAAAA,eAAe,CAACG,IAAhB,GAAuBL,GAAvB;AACAE,EAAAA,eAAe,CAACI,QAAhB,GAA2BL,QAA3B,CALqD,CAKhB;;AACrCE,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,eAA1B;AACAA,EAAAA,eAAe,CAACO,KAAhB,GAPqD,CAO5B;;AACzBN,EAAAA,QAAQ,CAACI,IAAT,CAAcG,WAAd,CAA0BR,eAA1B,EARqD,CAQT;AAC/C,C,CACD;;AACA,OAAO,SAASS,YAAT,CAAsBC,GAAtB,EAA2B;AAC9B,MAAIC,GAAG,GAAG,+BAAV;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,GAAG,CAACG,IAAJ,EAAT,CAAP;AACH","sourcesContent":["/**\n * 工具函数 - 杂篇\n */\n\n/**\n * 根据父路由名查询子路由列表\n * @param {Array<List>} allRoutes 路由列表数据\n * @param {String} name 父路由name名\n * @returns 路由列表\n */\n// export const getChildRoutersByParentName = (allRoutes, name) => {\n\n// };\n\n/**\n * 根据拿到的分析对象-规则组-规则形成数据结构\n * @param {Array<any>} data 后台返回的groke数据\n */\nexport const setTreeByGrokeData = (data) => {\n    // 直接遍历三层\n    let treeData = [];\n    treeData = data.map(list => {\n        return {\n            id:list.ana_id,\n            idKey:'ana' + list.ana_id,\n            pId:'root',\n            pIdKey:'root',\n            ownerType:0,\n            title:list.ana_name,\n            name:list.ana_name,\n            ...list,\n            expand:true,\n            idArr:[list.ana_id],\n            children: list.rulegroup_set.length == 0?[]:list.rulegroup_set.map(list2 => {\n                return {\n                    id: list2.rulegroup_id,\n                    idKey: 'rg' + list2.rulegroup_id,\n                    pId: list.ana_id,\n                    pIdKey: 'ana' + list.ana_id,\n                    ownerType: 1,\n                    title: list2.rulegroup_name,\n                    name:list2.rulegroup_name,\n                    ...list2,\n                    idArr:[list.ana_id, list2.rulegroup_id],\n                    children:list2.rule_set.length === 0?[]: list2.rule_set.map(list3 => {\n                        return {\n                            id: list3.rule_id,\n                            idKey: 'r' + list3.rule_id,\n                            pId: list2.rulegroup_id,\n                            pIdKey: 'rg' + list2.rulegroup_id,\n                            ownerType: 2,\n                            title: list3.rule_name,\n                            name: list3.rule_name,\n                            ...list3,\n                            idArr:[list.ana_id, list2.rulegroup_id,list3.rule_id],\n                        }\n                    })\n                }\n            })\n        }\n    })\n    return treeData;\n}\n\n/**\n * 将json数据处理成Tree节点数据\n * @param {Array<any>} data 后台返回的具有父子关系的数据\n * @returns 树形结构数据\n */\nexport const setTreeByJson = (data) => {\n    // 获取没有父节点的数据\n    let parents = data.filter(list => list.mark_pid === null);\n    // 获取有父节点的数据\n    let children = data.filter(list => list.mark_pid !== null);\n    // 定义一个数据转换方法\n    const transfer = ( parents, children ) => {\n        // 去遍历父节点数据\n        parents.forEach((parent) => {\n            // 遍历子节点数据\n            children.forEach((child) => {\n                if(parent.mark_id === child.mark_pid){\n                    // 判断说明是当前父节点的数据 添加到parent的chidlren之中\n                    parent.children?parent.children.push(child):parent.children = [child];\n                    // 让当前节点再去查找他的子节点 可选择的具有父节点的数据要剔除当前节点\n                    let newChildren = children.filter((list) => list.mark_id !== child.id);\n                    transfer([child], newChildren);\n                }\n            })\n        })\n    }\n    transfer(parents,children);\n    return parents\n}\n/**\n * 根据文件url进行下载\n */\n export function downloadFileOffline(url, filename = '') {\n    let downloadElement = document.createElement('a');\n    // let href = window.URL.createObjectURL(blob); //创建下载的链接\n    // console.log(blob);\n    downloadElement.href = url;\n    downloadElement.download = filename; //下载后文件名\n    document.body.appendChild(downloadElement);\n    downloadElement.click(); //点击下载\n    document.body.removeChild(downloadElement); //下载完成移除元素\n}\n// 表达式匹配规则按 变量名 规则匹配\nexport function regularRules(str) {\n    let reg = /.*{.*>>[\\d@#$%^&*()?/\\\\].*}.*/;\n    return reg.test(str.trim())\n}\n"]}]}