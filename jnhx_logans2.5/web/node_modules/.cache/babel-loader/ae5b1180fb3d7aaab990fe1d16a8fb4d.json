{"remainingRequest":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/babel-loader/lib/index.js!/home/hx_ygg/job/hx_logana3.0/web/node_modules/eslint-loader/index.js??ref--13-0!/home/hx_ygg/job/hx_logana3.0/web/src/filters/index.js","dependencies":[{"path":"/home/hx_ygg/job/hx_logana3.0/web/src/filters/index.js","mtime":1631238422157},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKCi8qKgogKiDlrZjlgqjmiYDmnInlhajlsYDnrqHpgZPvvIjov4fmu6TlmajvvInvvIzlubblr7zlh7rlnKhWdWXkuK3lhajlsYDms6jlhowKICovCnZhciBmaWx0ZXJzID0gewogIC8qKgogICAqIEBkZXNjcmlwdGlvbiDmraTlpITnlKjkuo7ov4fmu6Tlmajkvb/nlKjvvIzlpITnkIbml7bpl7Tlh73mlbDvvIzlsIbml7bpl7TmiLPjgIHmoIflh4bml7bpl7TmoLzlvI8g6L2s5o2iIOWtl+espuS4siDlpoIyMDA5LTAzLTA2IG9yIDIwMDktMDMtMDYgMTI6MzY6MjAKICAgKiBAcGFyYW0ge251bWJlcnxEYXRlfSB2YWwg5LiN6ZyA6KaB5Lyg5YWlCiAgICogQHBhcmFtIHtudW1iZXJ9IHR5cGUg5Y+v6YCJ5oup5Lyg5YWlIDDvvJrmiKrmraLliLDml6UgMe+8muaIquatouWIsOenkiDpu5jorqTmnKowCiAgICovCiAgZGF0ZUZvcm1hdHRlcjogZnVuY3Rpb24gZGF0ZUZvcm1hdHRlcih2YWwpIHsKICAgIHZhciB0eXBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwOwoKICAgIGlmICghdmFsKSB7CiAgICAgIHJldHVybiAnLSc7CiAgICB9CgogICAgdmFyIHN0cjsKICAgIHZhciB0aW1lID0gbmV3IERhdGUodmFsKTsKICAgIHZhciB5ZWFyID0gdGltZS5nZXRGdWxsWWVhcigpOwogICAgdmFyIG1vbnRoID0gdGltZS5nZXRNb250aCgpICsgMTsKICAgIHZhciBkYXRlID0gdGltZS5nZXREYXRlKCk7CiAgICB2YXIgaFRlbXAgPSB0aW1lLmdldEhvdXJzKCk7CiAgICB2YXIgaCA9IGhUZW1wID49IDEwID8gaFRlbXAgOiAnMCcgKyBoVGVtcDsKICAgIHZhciBtVGVtcCA9IHRpbWUuZ2V0TWludXRlcygpOwogICAgdmFyIG0gPSBtVGVtcCA+PSAxMCA/IG1UZW1wIDogJzAnICsgbVRlbXA7CiAgICB2YXIgc1RlbXAgPSB0aW1lLmdldFNlY29uZHMoKTsKICAgIHZhciBzID0gc1RlbXAgPj0gMTAgPyBzVGVtcCA6ICcwJyArIHNUZW1wOwoKICAgIGlmICh0eXBlID09PSAxKSB7CiAgICAgIHN0ciA9ICIiLmNvbmNhdCh5ZWFyLCAiLSIpLmNvbmNhdChtb250aCwgIi0iKS5jb25jYXQoZGF0ZSwgIiAiKS5jb25jYXQoaCwgIjoiKS5jb25jYXQobSwgIjoiKS5jb25jYXQocyk7CiAgICB9IGVsc2UgewogICAgICBzdHIgPSAiIi5jb25jYXQoeWVhciwgIi0iKS5jb25jYXQobW9udGgsICItIikuY29uY2F0KGRhdGUpOwogICAgfQoKICAgIHJldHVybiBzdHI7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBmaWx0ZXJzOw=="},{"version":3,"sources":["/home/hx_ygg/job/hx_logana3.0/web/src/filters/index.js"],"names":["filters","dateFormatter","val","type","str","time","Date","year","getFullYear","month","getMonth","date","getDate","hTemp","getHours","h","mTemp","getMinutes","m","sTemp","getSeconds","s"],"mappings":";;AAAA;AACA;AACA;AACA,IAAMA,OAAO,GAAG;AACZ;AACJ;AACA;AACA;AACA;AACIC,EAAAA,aANY,yBAMEC,GANF,EAMiB;AAAA,QAAVC,IAAU,uEAAH,CAAG;;AACzB,QAAI,CAACD,GAAL,EAAU;AACN,aAAO,GAAP;AACH;;AACD,QAAIE,GAAJ;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASJ,GAAT,CAAX;AACA,QAAIK,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAX;AACA,QAAIC,KAAK,GAAGJ,IAAI,CAACK,QAAL,KAAkB,CAA9B;AACA,QAAIC,IAAI,GAAGN,IAAI,CAACO,OAAL,EAAX;AACA,QAAIC,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAZ;AACA,QAAIC,CAAC,GAAGF,KAAK,IAAI,EAAT,GAAcA,KAAd,GAAsB,MAAMA,KAApC;AACA,QAAIG,KAAK,GAAGX,IAAI,CAACY,UAAL,EAAZ;AACA,QAAIC,CAAC,GAAGF,KAAK,IAAI,EAAT,GAAcA,KAAd,GAAsB,MAAMA,KAApC;AACA,QAAIG,KAAK,GAAGd,IAAI,CAACe,UAAL,EAAZ;AACA,QAAIC,CAAC,GAAGF,KAAK,IAAI,EAAT,GAAcA,KAAd,GAAsB,MAAMA,KAApC;;AACA,QAAIhB,IAAI,KAAK,CAAb,EAAgB;AACZC,MAAAA,GAAG,aAAMG,IAAN,cAAcE,KAAd,cAAuBE,IAAvB,cAA+BI,CAA/B,cAAoCG,CAApC,cAAyCG,CAAzC,CAAH;AACH,KAFD,MAEO;AACHjB,MAAAA,GAAG,aAAMG,IAAN,cAAcE,KAAd,cAAuBE,IAAvB,CAAH;AACH;;AACD,WAAOP,GAAP;AACH;AA3BW,CAAhB;AA6BA,eAAeJ,OAAf","sourcesContent":["/**\n * 存储所有全局管道（过滤器），并导出在Vue中全局注册\n */\nconst filters = {\n    /**\n     * @description 此处用于过滤器使用，处理时间函数，将时间戳、标准时间格式 转换 字符串 如2009-03-06 or 2009-03-06 12:36:20\n     * @param {number|Date} val 不需要传入\n     * @param {number} type 可选择传入 0：截止到日 1：截止到秒 默认未0\n     */\n    dateFormatter(val, type = 0) {\n        if (!val) {\n            return '-';\n        }\n        let str;\n        let time = new Date(val);\n        let year = time.getFullYear();\n        let month = time.getMonth() + 1;\n        let date = time.getDate();\n        let hTemp = time.getHours();\n        let h = hTemp >= 10 ? hTemp : '0' + hTemp;\n        let mTemp = time.getMinutes();\n        let m = mTemp >= 10 ? mTemp : '0' + mTemp;\n        let sTemp = time.getSeconds();\n        let s = sTemp >= 10 ? sTemp : '0' + sTemp;\n        if (type === 1) {\n            str = `${year}-${month}-${date} ${h}:${m}:${s}`;\n        } else {\n            str = `${year}-${month}-${date}`;\n        }\n        return str;\n    },\n};\nexport default filters;\n"]}]}