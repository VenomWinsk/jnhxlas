{"remainingRequest":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hx_ygg/job/hx_logana3.0/web/src/views/operation/groke/groke.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/hx_ygg/job/hx_logana3.0/web/src/views/operation/groke/groke.vue","mtime":1631238422177},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdyb2tlIHsKCS50cmVlIHsKCQltYXJnaW46IDEwcHg7CgkJaGVpZ2h0OiBjYWxjKDEwMCUgLSAyMHB4KTsKCQl3aWR0aDogMjgwcHg7Cgl9CgkudHJlZUNvbnRlbnQgewoJCW1hcmdpbjogMTBweCAxMHB4IDEwcHggMDsKCQloZWlnaHQ6IGNhbGMoMTAwJSAtIDIwcHgpOwoJCXdpZHRoOiBjYWxjKDEwMCUgLSAzMTBweCk7Cgl9Cn0KLmxpc3RfdG9wIHsKCS50aXRsZSB7CgkJZm9udC13ZWlnaHQ6IDcwMDsKCQlmb250LXNpemU6IDE0cHg7CgkJY29sb3I6ICMzMzM7Cgl9CgkuY29udGVudCB7CgkJZm9udC1zaXplOiAxNHB4OwoJfQp9Ci5saXN0X2JvdHRvbSB7CglwIHsKCQltYXJnaW4tcmlnaHQ6IDMwcHg7CgkJLnRpdGxlIHsKCQkJZm9udC13ZWlnaHQ6IDcwMDsKCQkJZm9udC1zaXplOiAxNHB4OwoJCQljb2xvcjogIzMzMzsKCQl9CgkJLmNvbnRlbnQgewoJCQlmb250LXNpemU6IDE0cHg7CgkJfQoJfQp9Cg=="},{"version":3,"sources":["groke.vue"],"names":[],"mappingskrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"groke.vue","sourceRoot":"src/views/operation/groke","sourcesContent":["<template>\n\t<div class=\"groke h100 clearfix\">\n\t\t<div class=\"tree fl\">\n\t\t\t<Card class=\"h100\" dis-hover>\n\t\t\t\t<Tree\n\t\t\t\t\t:data=\"treeData\"\n\t\t\t\t\t@on-select-change=\"selectNodeChange\"\n\t\t\t\t\tref=\"nodeTree\"\n\t\t\t\t></Tree>\n\t\t\t</Card>\n\t\t</div>\n\t\t<div class=\"treeContent fl\">\n\t\t\t<Card class=\"h100\" dis-hover>\n\t\t\t\t<RadioGroup\n\t\t\t\t\tv-model=\"contentType\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tbutton-style=\"solid\"\n\t\t\t\t\tstyle=\"margin-bottom: 10px\"\n\t\t\t\t\t@on-change=\"contentTypeChange\"\n\t\t\t\t>\n\t\t\t\t\t<Radio label=\"field\" v-if=\"currentNode.ownerType !== 'root'\"\n\t\t\t\t\t\t>字段管理</Radio\n\t\t\t\t\t>\n\t\t\t\t\t<Radio label=\"node\" v-if=\"currentNode.ownerType !== 2\"\n\t\t\t\t\t\t>子节点管理</Radio\n\t\t\t\t\t>\n\t\t\t\t</RadioGroup>\n\t\t\t\t<my-table\n\t\t\t\t\t:column=\"tableConfig.column\"\n\t\t\t\t\t:data=\"tableConfig.data\"\n\t\t\t\t\t:tools=\"tableConfig.tools\"\n\t\t\t\t\t:frontPage=\"true\"\n\t\t\t\t\t:total=\"tableConfig.data.length\"\n\t\t\t\t>\n\t\t\t\t\t<template #buttons>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\tstyle=\"background-color: #1c84c6\"\n\t\t\t\t\t\t\t@click=\"open(1)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon type=\"md-add\" />新增\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #action=\"{ row }\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t@click=\"viewDetail(row)\"\n\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\tcontentType === 'node' &&\n\t\t\t\t\t\t\t\tcurrentNode.ownerType === 1\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t>详情</Button\n\t\t\t\t\t\t>&nbsp;\n\t\t\t\t\t\t<Button type=\"info\" size=\"small\" @click=\"open(2, row)\"\n\t\t\t\t\t\t\t>编辑</Button\n\t\t\t\t\t\t>&nbsp;\n\t\t\t\t\t\t<Button type=\"warning\" size=\"small\" @click=\"del(row)\">\n\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</template>\n\t\t\t\t</my-table>\n\t\t\t</Card>\n\t\t</div>\n\t\t<!-- 字段增加 -->\n\t\t<Modal\n\t\t\tv-model=\"fieldVisible\"\n\t\t\ttitle=\"字段新增\"\n\t\t\twidth=\"800px\"\n\t\t\t:mask-closable=\"false\"\n\t\t>\n\t\t\t<field-tool\n\t\t\t\t:form=\"fieldForm\"\n\t\t\t\t@formChange=\"formChange\"\n\t\t\t\tref=\"formTool\"\n\t\t\t></field-tool>\n\t\t\t<div slot=\"footer\">\n                <Button type=\"success\" @click=\"saveOrEdit()\">确定</Button>\n                <Button type=\"default\" @click=\"fieldVisible = false\">关闭</Button>\n            </div>\n\t\t</Modal>\n\t\t<!-- 添加子节点模态框 -->\n\t\t<Modal\n\t\t\tv-model=\"nodeVisible\"\n\t\t\t:title=\"nodeModalTitle\"\n\t\t\twidth=\"600\"\n\t\t\t:mask-closable=\"false\"\n\t\t\t@on-ok=\"saveOrEdit()\"\n\t\t>\n\t\t\t<template v-if=\"currentNode.ownerType === 'root'\">\n\t\t\t\t<Form :model=\"nodeFormroot\" :label-width=\"90\">\n\t\t\t\t\t<FormItem label=\"分析对象名称\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeFormroot.ana_name\"\n\t\t\t\t\t\t\tplaceholder=\"分析对象名称\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"分析对象描述\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeFormroot.ana_description\"\n\t\t\t\t\t\t\tplaceholder=\"分析对象描述\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t</Form>\n\t\t\t</template>\n\t\t\t<template v-if=\"currentNode.ownerType === 0\">\n\t\t\t\t<Form :model=\"nodeForm0\" :label-width=\"90\">\n\t\t\t\t\t<FormItem label=\"规则组名称\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm0.rulegroup_name\"\n\t\t\t\t\t\t\tplaceholder=\"规则组名称\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"文件特征\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm0.file_features\"\n\t\t\t\t\t\t\tplaceholder=\"文件特征\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"规则组描述\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm0.rulegroup_description\"\n\t\t\t\t\t\t\tplaceholder=\"规则组描述\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t</Form>\n\t\t\t</template>\n\t\t\t<template v-if=\"currentNode.ownerType === 1\">\n\t\t\t\t<Form :model=\"nodeForm1\" :label-width=\"90\">\n\t\t\t\t\t<FormItem label=\"规则名称\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.rule_name\"\n\t\t\t\t\t\t\tplaceholder=\"规则名称\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"规则描述\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.rule_description\"\n\t\t\t\t\t\t\tplaceholder=\"规则描述\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"包含特征\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.rule_infeatures\"\n\t\t\t\t\t\t\tplaceholder=\"包含特征\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"不包含特征\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.rule_exfeatures\"\n\t\t\t\t\t\t\tplaceholder=\"不包含特征\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"正则特征\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.rule_regex_features\"\n\t\t\t\t\t\t\tplaceholder=\"正则特征\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"原始日志\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.sourcelog\"\n\t\t\t\t\t\t\tplaceholder=\"原始日志\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input> </FormItem\n\t\t\t\t\t><FormItem label=\"提取表达式\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.extract_rule\"\n\t\t\t\t\t\t\tplaceholder=\"提取表达式\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input> </FormItem\n\t\t\t\t\t><FormItem label=\"转换表达式\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.transform_rule\"\n\t\t\t\t\t\t\tplaceholder=\"转换表达式\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input> </FormItem\n\t\t\t\t\t><FormItem label=\"替换表达式\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.replace_rule\"\n\t\t\t\t\t\t\tplaceholder=\"替换表达式\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem label=\"补充表达式\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"nodeForm1.supply_rule\"\n\t\t\t\t\t\t\tplaceholder=\"补充表达式\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</FormItem>\n\t\t\t\t</Form>\n\t\t\t</template>\n\t\t</Modal>\n\t\t<!-- 规则详情 -->\n\t\t<Modal v-model=\"ruleDetaiVisible\" title=\"规则详情\" width=\"650\">\n\t\t\t<List>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"list_top\">\n\t\t\t\t\t\t\t<span class=\"title\">原始日志：</span>\n\t\t\t\t\t\t\t<span class=\"content\">{{\n\t\t\t\t\t\t\t\tcurrentRuleDetail.sourcelog\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"list_top\">\n\t\t\t\t\t\t\t<span class=\"title\">提取表达式：</span>\n\t\t\t\t\t\t\t<span class=\"content\">{{\n\t\t\t\t\t\t\t\tcurrentRuleDetail.extract_rule || '-'\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"list_top\">\n\t\t\t\t\t\t\t<span class=\"title\">转换表达式：</span>\n\t\t\t\t\t\t\t<span class=\"content\">{{\n\t\t\t\t\t\t\t\tcurrentRuleDetail.transform_rule || '-'\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"list_top\">\n\t\t\t\t\t\t\t<span class=\"title\">替换表达式：</span>\n\t\t\t\t\t\t\t<span class=\"content\">{{\n\t\t\t\t\t\t\t\tcurrentRuleDetail.replace_rule || '-'\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"list_top\">\n\t\t\t\t\t\t\t<span class=\"title\">补充表达式：</span>\n\t\t\t\t\t\t\t<span class=\"content\">{{\n\t\t\t\t\t\t\t\tcurrentRuleDetail.supply_rule || '-'\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"list_bottom clearfix\">\n\t\t\t\t\t\t\t<p class=\"fl\">\n\t\t\t\t\t\t\t\t<span class=\"title\">不包含特征:</span>\n\t\t\t\t\t\t\t\t<span class=\"content\">\n\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\tcurrentRuleDetail.rule_exfeatures || '-'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p class=\"fl\">\n\t\t\t\t\t\t\t\t<span class=\"title\">包含特征:</span>\n\t\t\t\t\t\t\t\t<span class=\"content\">\n\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\tcurrentRuleDetail.rule_infeatures || '-'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p class=\"fl\">\n\t\t\t\t\t\t\t\t<span class=\"title\">正则特征:</span>\n\t\t\t\t\t\t\t\t<span class=\"content\">\n\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\tcurrentRuleDetail.rule_regex_features ||\n\t\t\t\t\t\t\t\t\t\t'-'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</Modal>\n\t</div>\n</template>\n<script>\nimport {\n\tgetAllTree,\n\tgetNodesByPid,\n\taddNodes,\n\teditNodes,\n\tdelNodes,\n\tgetFieldsByType,\n\taddFieldsByType,\n\teditFieldsByType,\n\tdelFields\n} from '@/api/operation';\nimport { fieldColumn, nodeColumn } from './column.js';\nimport { setTreeByGrokeData } from '@/utils/util';\nimport MyTable from '@/components/mytable/my-table.vue';\nimport fieldTool from './fieldTool.vue';\nexport default {\n\tname: 'groke',\n\tcomponents: { MyTable, fieldTool },\n\tdata() {\n\t\treturn {\n\t\t\ttreeData: [],\n\t\t\ttableConfig: {\n\t\t\t\tcolumn: [],\n\t\t\t\tdata: [],\n\t\t\t\ttools: ['refresh'],\n\t\t\t\ttotal:0,\n\t\t\t},\n\t\t\tcontentType: 'node',\n\t\t\tcurrentNodeId: '',\n\t\t\tcurrentNodeType: '',\n\t\t\tcurrentNode: {},\n\t\t\tstatus: 0, // 0是列表 1是新增 2是编辑\n\t\t\tdataId: '', // 当前数据的id\n\t\t\tfieldForm: {\n\t\t\t\tfield_ename: '',\n\t\t\t\tfield_cname: '',\n\t\t\t\tdisplay_type: 'input',\n\t\t\t\tis_many: 0,\n\t\t\t\tis_accurate: 1,\n\t\t\t\toption: null,\n\t\t\t\toption_type: 'handler',\n\t\t\t},\n\t\t\t// 分析对象\n\t\t\tnodeFormroot: {\n\t\t\t\tana_name: '',\n\t\t\t\tana_description: '',\n\t\t\t},\n\t\t\t// 规则组\n\t\t\tnodeForm0: {\n\t\t\t\trulegroup_name: '',\n\t\t\t\tfile_features: '',\n\t\t\t\trulegroup_description: '',\n\t\t\t},\n\t\t\t//规则\n\t\t\tnodeForm1: {\n\t\t\t\trule_name: '',\n\t\t\t\trule_description: '',\n\t\t\t\trule_index: 1,\n\t\t\t\trule_exfeatures: '', //不包含特征\n\t\t\t\trule_infeatures: '', //包含特征\n\t\t\t\trule_regex_features: '', //正则特征\n\t\t\t\tsourcelog: '',\n\t\t\t\textract_rule: '',\n\t\t\t\ttransform_rule: '',\n\t\t\t\treplace_rule: '',\n\t\t\t\tsupply_rule: '',\n\t\t\t},\n\t\t\tfieldVisible: false,\n\t\t\tnodeVisible: false,\n\t\t\truleDetaiVisible: false, // 规则详情 visible\n\t\t\tcurrentRuleDetail: {},\n\t\t\tcurrentData: {},\n\t\t};\n\t},\n\t// 1.哪个节点 id ownerType 2. 什么类型 contentType 3. 状态（编辑、列表）status dataId\n\twatch: {\n\t\t$route: {\n\t\t\thandler: function (val) {\n\t\t\t\t// 获取query中的内容  nodeId nodeType contentType status dataId\n\t\t\t\t// let nodeId = this.$route.query.nodeId;\n\t\t\t\t// let nodeType = this.$route.query.nodeType;\n\t\t\t\t// let contentType = this.$route.query.contentType;\n\n\t\t\t\tconsole.log(val);\n\t\t\t\tconsole.log(this.currentNode);\n\t\t\t},\n\t\t},\n\t\tcurrentNode: {\n\t\t\thandler: function (newVal, oldVal) {\n\t\t\t\tif (Object.keys(oldVal).length > 0) {\n\t\t\t\t\toldVal.selected = false;\n\t\t\t\t\t// 强制刷新树节点 vue响应式限制\n\t\t\t\t\tthis.treeData = JSON.parse(JSON.stringify(this.treeData));\n\t\t\t\t\t// 切换时候\n\t\t\t\t\tthis.getColumns(newVal);\n\t\t\t\t\tthis.getData();\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.initPage();\n\t},\n\tcomputed: {\n\t\tnodeModalTitle() {\n\t\t\tlet opt = '新增';\n\t\t\tlet type = '分析对象';\n\t\t\tif (this.status === 1) {\n\t\t\t\topt = '新增';\n\t\t\t} else if (this.status === 2) {\n\t\t\t\topt = '编辑';\n\t\t\t}\n\t\t\tswitch (this.currentNode.ownerType) {\n\t\t\t\tcase 'root':\n\t\t\t\t\ttype = '分析对象';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\ttype = '规则组';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\ttype = '规则';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn `${opt}${type}`;\n\t\t},\n\t\tgetCurrentForm() {\n\t\t\tif (this.contentType === 'field') {\n\t\t\t\treturn 'fieldForm';\n\t\t\t} else {\n\t\t\t\treturn this[`nodeForm${this.currentNode.ownerType}`];\n\t\t\t}\n\t\t},\n\t\tgetCurrentIdKey() {\n\t\t\tif (this.currentNode.ownerType === 'root') {\n\t\t\t\treturn 'ana_id';\n\t\t\t} else if (this.currentNode.ownerType === 0) {\n\t\t\t\treturn 'rulegroup_id';\n\t\t\t} else {\n\t\t\t\treturn 'rule_id';\n\t\t\t}\n\t\t},\n\t\tgetParentIdKey() {\n\t\t\tif (this.currentNode.ownerType === 0) {\n\t\t\t\treturn 'analyse';\n\t\t\t} else if (this.currentNode.ownerType === 1) {\n\t\t\t\treturn 'rulegroup';\n\t\t\t}\n\t\t},\n\t},\n\tmethods: {\n\t\tgetTree() {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tgetAllTree().then((res) => {\n\t\t\t\t\tlet realNodes = setTreeByGrokeData(res);\n\t\t\t\t\tlet data = {\n\t\t\t\t\t\ttitle: '规则集',\n\t\t\t\t\t\tid: 'root',\n\t\t\t\t\t\townerType: 'root',\n\t\t\t\t\t\texpand: true,\n\t\t\t\t\t\tchildren: realNodes,\n\t\t\t\t\t};\n\t\t\t\t\tresolve([data]);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tsetTree(data) {\n\t\t\treturn data.map((list) => {\n\t\t\t\tlet temp = {\n\t\t\t\t\t...list,\n\t\t\t\t\ttitle: list.name,\n\t\t\t\t\texpand: true,\n\t\t\t\t};\n\t\t\t\tif (list.children && list.children.length > 0) {\n\t\t\t\t\ttemp.children = this.setTree(temp.children);\n\t\t\t\t}\n\t\t\t\treturn temp;\n\t\t\t});\n\t\t},\n\t\tgetFields(idArr) {\n\t\t\tgetFieldsByType(idArr).then((res) => {\n\t\t\t\tthis.tableConfig.data = res;\n\t\t\t});\n\t\t},\n\t\t// 获取相应子节点\n\t\tgetRules(params) {\n\t\t\tgetNodesByPid(params.nodeId, params.ownerType).then((res) => {\n\t\t\t\tif (params.ownerType === 'root') {\n\t\t\t\t\tthis.tableConfig.data = res.map((list) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...list,\n\t\t\t\t\t\t\townerType: params.ownerType,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlet key = ['rulegroup_set', 'rule_set'];\n\t\t\t\t\tthis.tableConfig.data = !res[key[params.ownerType]]\n\t\t\t\t\t\t? []\n\t\t\t\t\t\t: res[key[params.ownerType]].map((list) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t...list,\n\t\t\t\t\t\t\t\t\townerType: params.ownerType,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t  });\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// 整合 获取数据\n\t\tgetData() {\n\t\t\tif (this.contentType === 'field') {\n\t\t\t\tthis.getFields(this.currentNode.idArr);\n\t\t\t} else {\n\t\t\t\tthis.getRules({\n\t\t\t\t\tnodeId: this.currentNode.id,\n\t\t\t\t\townerType: this.currentNode.ownerType,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tselectNodeChange(selectNodes, selectItem) {\n\t\t\tthis.currentNode = selectItem;\n\t\t\t// 如果是规则 没有下级节点 所以关闭节点管理\n\t\t\tif (this.currentNode.ownerType === 2) {\n\t\t\t\tthis.contentType = 'field';\n\t\t\t} else if (this.currentNode.ownerType === 'root') {\n\t\t\t\tthis.contentType = 'node';\n\t\t\t}\n\t\t},\n\t\tcontentTypeChange(event) {\n\t\t\tthis.contentType = event;\n\t\t\tthis.getData();\n\t\t\tthis.getColumns(this.currentNode);\n\t\t},\n\t\t// 选中某个节点\n\t\tselectNode(node) {\n\t\t\tthis.currentNode = node;\n\t\t\tnode.selected = true;\n\t\t},\n\t\t// 只执行一次的init整合\n\t\tasync initPage() {\n\t\t\t// 获取树结构数据\n\t\t\tthis.treeData = await this.getTree();\n\t\t\t// 第一次默认选择的节点\n\t\t\tthis.selectNode(this.treeData[0]);\n\t\t\t// 获取数据\n\t\t\tthis.getData();\n\t\t\t// this.go(null, 0, 'field', 0, null);\n\t\t\tthis.getColumns(this.currentNode);\n\t\t},\n\t\tgetColumns(node) {\n\t\t\tif (this.contentType === 'field') {\n\t\t\t\tthis.tableConfig.column = fieldColumn;\n\t\t\t} else {\n\t\t\t\tif (node.ownerType === 'root') {\n\t\t\t\t\tthis.tableConfig.column = nodeColumn[0];\n\t\t\t\t} else if (node.ownerType === 0) {\n\t\t\t\t\tthis.tableConfig.column = nodeColumn[1];\n\t\t\t\t} else if (node.ownerType === 1) {\n\t\t\t\t\tthis.tableConfig.column = nodeColumn[2];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// 删除\n\t\tdel(row) {\n\t\t\tlet that = this;\n\t\t\tthis.$Modal.confirm({\n\t\t\t\ttitle: '是否删除该条数据',\n\t\t\t\tonOk: function () {\n\t\t\t\t\tif(that.contentType === 'node'){\n\t\t\t\t\t\tdelNodes(\n\t\t\t\t\t\t\trow[that.getCurrentIdKey],\n\t\t\t\t\t\t\tthat.currentNode.ownerType\n\t\t\t\t\t\t).then(async () => {\n\t\t\t\t\t\t\tthat.$Message.success('删除成功');\n\t\t\t\t\t\t\tthat.getData();\n\t\t\t\t\t\t\tthat.treeData = await that.getTree();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelFields(\n\t\t\t\t\t\t\trow.field_id\n\t\t\t\t\t\t).then(() => {\n\t\t\t\t\t\t\tthat.$Message.success('删除成功');\n\t\t\t\t\t\t\tthat.getData();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\topen(type, data) {\n\t\t\tthis.resetForm();\n\t\t\tthis.status = type;\n\t\t\t// console.log(data)\n\t\t\tif (data) {\n\t\t\t\tthis.currentData = data;\n\t\t\t\tif (this.contentType === 'field') {\n\t\t\t\t\tfor (const key in this.fieldForm) {\n\t\t\t\t\t\tif (Object.hasOwnProperty.call(data, key)) {\n\t\t\t\t\t\t\tthis.fieldForm[key] = data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const key in this.getCurrentForm) {\n\t\t\t\t\t\tif (Object.hasOwnProperty.call(data, key)) {\n\t\t\t\t\t\t\tthis.getCurrentForm[key] = data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(this.fieldForm)\n\t\t\tif (this.contentType === 'field') {\n\t\t\t\tthis.fieldVisible = true;\n\t\t\t} else {\n\t\t\t\tthis.nodeVisible = true;\n\t\t\t}\n\t\t},\n\t\t// 查看规则详情\n\t\tviewDetail(row) {\n\t\t\tthis.ruleDetaiVisible = true;\n\t\t\tthis.currentRuleDetail = row;\n\t\t},\n\t\tsaveOrEdit() {\n\t\t\tlet form;\n\t\t\tif (this.contentType === 'node') {\n\t\t\t\tif (this.currentNode.ownerType !== 'root') {\n\t\t\t\t\tlet obj = {};\n\t\t\t\t\tobj[this.getParentIdKey] = this.currentNode.id;\n\t\t\t\t\tform = Object.assign({}, this.getCurrentForm, obj);\n\t\t\t\t} else {\n\t\t\t\t\tform = this.getCurrentForm;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tform = Object.assign({}, this.fieldForm);\n\t\t\t\tif(!form.field_ename.trim() && !form.field_cname.trim()){\n\t\t\t\t\tthis.$Message.warning('请输入字段中英文');\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif(form.display_type === 'select' && !form.option.trim()){\n\t\t\t\t\tthis.$Message.warning('请选择输入下拉框数据配置');\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.status === 1) {\n\t\t\t\tthis.save(form);\n\t\t\t} else {\n\t\t\t\tthis.edit(form);\n\t\t\t}\n\t\t},\n\t\tsave(form) {\n\t\t\tif (this.contentType === 'node') {\n\t\t\t\taddNodes(form, this.currentNode.ownerType).then(async () => {\n\t\t\t\t\tthis.$Message.success('添加成功');\n\t\t\t\t\tthis.getData();\n\t\t\t\t\tthis.treeData = await this.getTree();\n\t\t\t\t\tthis.fieldVisible = false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taddFieldsByType(form, this.currentNode.idArr).then(() => {\n\t\t\t\t\tthis.$Message.success('添加成功');\n\t\t\t\t\tthis.getData();\n\t\t\t\t\tthis.fieldVisible = false;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tedit(form) {\n\t\t\tif (this.contentType === 'node') {\n\t\t\t\teditNodes(\n\t\t\t\t\tform,\n\t\t\t\t\tthis.currentNode.ownerType,\n\t\t\t\t\tthis.currentData[this.getCurrentIdKey]\n\t\t\t\t).then(async () => {\n\t\t\t\t\tthis.$Message.success('编辑成功');\n\t\t\t\t\tthis.getData();\n\t\t\t\t\tthis.treeData = await this.getTree();\n\t\t\t\t\tthis.fieldVisible = false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\teditFieldsByType(form, this.currentNode.idArr, this.currentData.field_id).then(() => {\n\t\t\t\t\tthis.$Message.success('编辑成功');\n\t\t\t\t\tthis.getData();\n\t\t\t\t\tthis.fieldVisible = false;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tresetForm() {\n\t\t\tthis.fieldForm = {\n\t\t\t\tfield_ename: '',\n\t\t\t\tfield_cname: '',\n\t\t\t\tdisplay_type: 'input',\n\t\t\t\tis_many: 0,\n\t\t\t\tis_accurate: 1,\n\t\t\t\toption: null,\n\t\t\t\toption_type: 'handler',\n\t\t\t};\n\t\t\t// 分析对象\n\t\t\tthis.nodeFormroot = {\n\t\t\t\tana_name: '',\n\t\t\t\tana_description: '',\n\t\t\t};\n\t\t\t// 规则组\n\t\t\tthis.nodeForm0 = {\n\t\t\t\trulegroup_name: '',\n\t\t\t\tfile_features: '',\n\t\t\t\trulegroup_description: '',\n\t\t\t};\n\t\t\t//规则\n\t\t\tthis.nodeForm1 = {\n\t\t\t\trule_name: '',\n\t\t\t\trule_description: '',\n\t\t\t\trule_index: 1,\n\t\t\t\trule_exfeatures: '', //不包含特征\n\t\t\t\trule_infeatures: '', //包含特征\n\t\t\t\trule_regex_features: '', //正则特征\n\t\t\t\tsourcelog: '',\n\t\t\t\textract_rule: '',\n\t\t\t\ttransform_rule: '',\n\t\t\t\treplace_rule: '',\n\t\t\t\tsupply_rule: '',\n\t\t\t};\n\t\t},\n\t\tformChange(form) {\n\t\t\tthis.fieldForm = form;\n\t\t},\n\t},\n};\n</script>\n<style lang=\"scss\">\n.groke {\n\t.tree {\n\t\tmargin: 10px;\n\t\theight: calc(100% - 20px);\n\t\twidth: 280px;\n\t}\n\t.treeContent {\n\t\tmargin: 10px 10px 10px 0;\n\t\theight: calc(100% - 20px);\n\t\twidth: calc(100% - 310px);\n\t}\n}\n.list_top {\n\t.title {\n\t\tfont-weight: 700;\n\t\tfont-size: 14px;\n\t\tcolor: #333;\n\t}\n\t.content {\n\t\tfont-size: 14px;\n\t}\n}\n.list_bottom {\n\tp {\n\t\tmargin-right: 30px;\n\t\t.title {\n\t\t\tfont-weight: 700;\n\t\t\tfont-size: 14px;\n\t\t\tcolor: #333;\n\t\t}\n\t\t.content {\n\t\t\tfont-size: 14px;\n\t\t}\n\t}\n}\n</style>\n"]}]}