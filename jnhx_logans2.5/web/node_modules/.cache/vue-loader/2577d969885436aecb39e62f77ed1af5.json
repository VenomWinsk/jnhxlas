{"remainingRequest":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hx_ygg/job/hx_logana3.0/web/src/views/layout.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/hx_ygg/job/hx_logana3.0/web/src/views/layout.vue","mtime":1631238422177},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi9sYXlvdXQnOwo="},{"version":3,"sources":["layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA","file":"layout.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"layout\">\n        <Layout class=\"top\">\n            <Header :style=\"{ padding: 0 }\" class=\"layout-header-bar\">\n                <div class=\"logo\">\n                    <img\n                        src=\"../assets/main/logo-small.png\"\n                        width=\"36px\"\n                        height=\"36px\"\n                        style=\"vertical-align: middle\"\n                    />\n                    <span style=\"margin-left: 10px\">日志收集与分析系统</span>\n                </div>\n                <Menu\n                    mode=\"horizontal\"\n                    :active-name=\"activeNameTop\"\n                    @on-select=\"toRoute\"\n                >\n                    <div class=\"layout-nav\">\n                        <!-- <MenuItem name=\"dashboard\">\n                            <Icon type=\"md-home\"></Icon>\n                            概览\n                        </MenuItem> -->\n                        <MenuItem\n                            v-for=\"menu in menus\"\n                            :name=\"menu.nameEn\"\n                            :key=\"menu.nameEn\"\n                        >\n                            <Icon :type=\"menu.icon\"></Icon>\n                            {{ menu.nameCn }}\n                        </MenuItem>\n                    </div>\n                </Menu>\n                <div class=\"headerMenu fr\">\n                    <Dropdown @on-click=\"menuClick\">\n                        <div class=\"avatar\">\n                            <Avatar :src=\"avatarImg\" />\n                            {{ $store.state.userData.name }}\n                        </div>\n                        <DropdownMenu slot=\"list\">\n                            <DropdownItem name=\"logout\">\n                                <Icon type=\"md-log-out\" />\n                                退出登录\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                </div>\n            </Header>\n            <Content class=\"h100\">\n                <router-view />\n            </Content>\n        </Layout>\n    </div>\n</template>\n<script>\nimport { login } from '@/api/user';\n\nimport avatarImg from '@/assets/main/avatar.jpg';\nexport default {\n    name: 'layout',\n    data() {\n        return {\n            isCollapsed: false, // 菜单的展开、收起\n            activeNameTop: 'dashboard',\n            avatarImg,\n            menus: [],\n        };\n    },\n    computed: {\n        rotateIcon() {\n            return ['menu-icon', this.isCollapsed ? 'rotate-icon' : ''];\n        },\n        menuitemClasses() {\n            return ['menu-item', this.isCollapsed ? 'collapsed-menu' : ''];\n        },\n    },\n    methods: {\n        collapsedSider() {\n            this.$refs.side1.toggleCollapse();\n        },\n        // 路由跳转\n        toRoute(name) {\n            // this.activeNameTop = name;\n            this.$router.push({ name });\n        },\n        getMenus() {\n            login().then((res) => {\n                this.menus = res.data.menus;\n                sessionStorage.setItem('menus', JSON.stringify(this.menus));\n            });\n        },\n        menuClick(name) {\n            if (name === 'logout') {\n                sessionStorage.clear();\n                this.$store.commit('setToken', '');\n                this.$store.commit('setUserData', {});\n                this.$router.push({ name: 'login' });\n            }\n        },\n    },\n    async created(){\n        await this.$store.dispatch('getCity');\n        await this.$store.dispatch('getCountry');\n    },\n    mounted() {\n        this.menus = this.$store.state.userData.menus;\n        this.activeNameTop = this.$route.path.split('/')[1];\n    },\n};\n</script>\n<style lang=\"scss\">\n@import './layout';\n</style>\n"]}]}