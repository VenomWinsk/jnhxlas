{"remainingRequest":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hx_ygg/job/hx_logana3.0/web/src/components/checkFields/checkFields.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/hx_ygg/job/hx_logana3.0/web/src/components/checkFields/checkFields.vue","mtime":1631238422157},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jaGVja0ZpZWxkc01vZGFsIHsKICAgIC5pdnUtbW9kYWwtY29udGVudCB7CiAgICAgICAgLml2dS1tb2RhbC1jbG9zZSB7CiAgICAgICAgICAgIHRvcDogNHB4OwogICAgICAgICAgICByaWdodDogNHB4OwogICAgICAgIH0KICAgICAgICAuaXZ1LW1vZGFsLWhlYWRlciB7CiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTJweDsKICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4OwogICAgICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4OwogICAgICAgICAgICAuaXZ1LW1vZGFsLWhlYWRlci1pbm5lciB7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEzcHg7CiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIC5pdnUtbW9kYWwtYm9keSB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDsKICAgICAgICAgICAgLml2dS1jaGVja2JveC13cmFwcGVyIHsKICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAuaXZ1LW1vZGFsLWZvb3RlciB7CiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTJweDsKICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4OwogICAgICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmNGY3OwogICAgICAgICAgICBidXR0b24gewogICAgICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["checkFields.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"checkFields.vue","sourceRoot":"src/components/checkFields","sourcesContent":["<template>\n    <div class=\"checkFields\">\n        <Modal\n            class=\"checkFieldsModal\"\n            :value=\"value\"\n            :title=\"title\"\n            :mask-closable=\"false\"\n            @on-cancel=\"close\"\n            :styles=\"{\n                top: '10px',\n            }\"\n        >\n            <div\n                class=\"checkAll\"\n                style=\"\n                    border-bottom: 1px solid #e9e9e9;\n                    padding-bottom: 6px;\n                    margin-bottom: 6px;\n                \"\n            >\n                <Checkbox\n                    :indeterminate=\"indeterminate\"\n                    :value=\"checkAll\"\n                    @click.prevent.native=\"handleCheckAll\"\n                    >全选</Checkbox\n                >\n            </div>\n            <CheckboxGroup\n                v-model=\"checkAllGroup\"\n                @on-change=\"checkAllGroupChange\"\n            >\n                <Row>\n                    <Col :span=\"6\" v-for=\"field in fields\" :key=\"field.field_id\">\n                        <Checkbox :label=\"field.field_id\">{{ field.field_cname }}</Checkbox>\n                    </Col>\n                </Row>\n            </CheckboxGroup>\n            <div slot=\"footer\">\n                <Button type=\"success\" @click=\"ok\">确定</Button>\n                <Button type=\"default\" @click=\"close\">关闭</Button>\n            </div>\n        </Modal>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'checkFields',\n    props: {\n        // 模态框的显示与隐藏\n        value: {\n            type: Boolean,\n            default: false,\n            required: true,\n        },\n        // 模态框的标题\n        title: {\n            type: String,\n            default: '选择条件字段',\n        },\n        // 字段数据\n        fields: {\n            type: Array,\n            required: true,\n        },\n        effectFields: {\n            type: Array,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            indeterminate: false,\n            checkAll: false,\n            checkAllGroup: [],\n        };\n    },\n    watch: {\n        effectFields: {\n            handler: function (val) {\n                if (val && val.length > 0) {\n                    this.checkAllGroup = this.effectFields.map(\n                        (list) => list.field_id\n                    );\n                    this.checkAllGroupChange(this.checkAllGroup);\n                } else {\n                    this.checkAllGroup = [];\n                }\n            },\n        },\n    },\n    methods: {\n        handleCheckAll() {\n            if (this.indeterminate) {\n                this.checkAll = false;\n            } else {\n                this.checkAll = !this.checkAll;\n            }\n            this.indeterminate = false;\n\n            if (this.checkAll) {\n                this.checkAllGroup = this.fields.map((list) => list.field_id);\n            } else {\n                this.checkAllGroup = [];\n            }\n        },\n        checkAllGroupChange(data) {\n            if (data.length === this.fields.length) {\n                this.indeterminate = false;\n                this.checkAll = true;\n            } else if (data.length > 0) {\n                this.indeterminate = true;\n                this.checkAll = false;\n            } else {\n                this.indeterminate = false;\n                this.checkAll = false;\n            }\n        },\n        close() {\n            this.$emit('input', false);\n        },\n        ok() {\n            let data = this.fields.filter((list) =>\n                this.checkAllGroup.includes(list.field_id)\n            );\n            this.$emit('finallyFields', data);\n        },\n    },\n};\n</script>\n<style lang=\"scss\">\n.checkFieldsModal {\n    .ivu-modal-content {\n        .ivu-modal-close {\n            top: 4px;\n            right: 4px;\n        }\n        .ivu-modal-header {\n            padding: 10px 12px;\n            font-size: 13px;\n            // background-color: #f8f8f8;\n            .ivu-modal-header-inner {\n                font-size: 13px;\n                font-weight: 700;\n            }\n        }\n        .ivu-modal-body {\n            font-size: 13px;\n            .ivu-checkbox-wrapper {\n                font-size: 13px;\n            }\n        }\n        .ivu-modal-footer {\n            padding: 10px 12px;\n            font-size: 13px;\n            // background-color: #f0f4f7;\n            button {\n                font-size: 13px;\n            }\n        }\n    }\n}\n</style>\n"]}]}