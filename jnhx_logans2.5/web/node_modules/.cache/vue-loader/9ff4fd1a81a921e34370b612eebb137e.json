{"remainingRequest":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hx_ygg/job/hx_logana3.0/web/src/components/checkFields/checkFields.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hx_ygg/job/hx_logana3.0/web/src/components/checkFields/checkFields.vue","mtime":1631238422157},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hx_ygg/job/hx_logana3.0/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdjaGVja0ZpZWxkcycsCiAgICBwcm9wczogewogICAgICAgIC8vIOaooeaAgeahhueahOaYvuekuuS4jumakOiXjwogICAgICAgIHZhbHVlOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB9LAogICAgICAgIC8vIOaooeaAgeahhueahOagh+mimAogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJ+mAieaLqeadoeS7tuWtl+autScsCiAgICAgICAgfSwKICAgICAgICAvLyDlrZfmrrXmlbDmja4KICAgICAgICBmaWVsZHM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgZWZmZWN0RmllbGRzOiB7CiAgICAgICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB9LAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaW5kZXRlcm1pbmF0ZTogZmFsc2UsCiAgICAgICAgICAgIGNoZWNrQWxsOiBmYWxzZSwKICAgICAgICAgICAgY2hlY2tBbGxHcm91cDogW10sCiAgICAgICAgfTsKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGVmZmVjdEZpZWxkczogewogICAgICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICAgICAgICBpZiAodmFsICYmIHZhbC5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbEdyb3VwID0gdGhpcy5lZmZlY3RGaWVsZHMubWFwKAogICAgICAgICAgICAgICAgICAgICAgICAobGlzdCkgPT4gbGlzdC5maWVsZF9pZAogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbEdyb3VwQ2hhbmdlKHRoaXMuY2hlY2tBbGxHcm91cCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tBbGxHcm91cCA9IFtdOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgIH0sCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGhhbmRsZUNoZWNrQWxsKCkgewogICAgICAgICAgICBpZiAodGhpcy5pbmRldGVybWluYXRlKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrQWxsID0gZmFsc2U7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrQWxsID0gIXRoaXMuY2hlY2tBbGw7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5pbmRldGVybWluYXRlID0gZmFsc2U7CgogICAgICAgICAgICBpZiAodGhpcy5jaGVja0FsbCkgewogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbEdyb3VwID0gdGhpcy5maWVsZHMubWFwKChsaXN0KSA9PiBsaXN0LmZpZWxkX2lkKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tBbGxHcm91cCA9IFtdOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjaGVja0FsbEdyb3VwQ2hhbmdlKGRhdGEpIHsKICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID09PSB0aGlzLmZpZWxkcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHRoaXMuaW5kZXRlcm1pbmF0ZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbCA9IHRydWU7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLmluZGV0ZXJtaW5hdGUgPSB0cnVlOwogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbCA9IGZhbHNlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5pbmRldGVybWluYXRlID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrQWxsID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNsb3NlKCkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGZhbHNlKTsKICAgICAgICB9LAogICAgICAgIG9rKCkgewogICAgICAgICAgICBsZXQgZGF0YSA9IHRoaXMuZmllbGRzLmZpbHRlcigobGlzdCkgPT4KICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tBbGxHcm91cC5pbmNsdWRlcyhsaXN0LmZpZWxkX2lkKQogICAgICAgICAgICApOwogICAgICAgICAgICB0aGlzLiRlbWl0KCdmaW5hbGx5RmllbGRzJywgZGF0YSk7CiAgICAgICAgfSwKICAgIH0sCn07Cg=="},{"version":3,"sources":["checkFields.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"checkFields.vue","sourceRoot":"src/components/checkFields","sourcesContent":["<template>\n    <div class=\"checkFields\">\n        <Modal\n            class=\"checkFieldsModal\"\n            :value=\"value\"\n            :title=\"title\"\n            :mask-closable=\"false\"\n            @on-cancel=\"close\"\n            :styles=\"{\n                top: '10px',\n            }\"\n        >\n            <div\n                class=\"checkAll\"\n                style=\"\n                    border-bottom: 1px solid #e9e9e9;\n                    padding-bottom: 6px;\n                    margin-bottom: 6px;\n                \"\n            >\n                <Checkbox\n                    :indeterminate=\"indeterminate\"\n                    :value=\"checkAll\"\n                    @click.prevent.native=\"handleCheckAll\"\n                    >全选</Checkbox\n                >\n            </div>\n            <CheckboxGroup\n                v-model=\"checkAllGroup\"\n                @on-change=\"checkAllGroupChange\"\n            >\n                <Row>\n                    <Col :span=\"6\" v-for=\"field in fields\" :key=\"field.field_id\">\n                        <Checkbox :label=\"field.field_id\">{{ field.field_cname }}</Checkbox>\n                    </Col>\n                </Row>\n            </CheckboxGroup>\n            <div slot=\"footer\">\n                <Button type=\"success\" @click=\"ok\">确定</Button>\n                <Button type=\"default\" @click=\"close\">关闭</Button>\n            </div>\n        </Modal>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'checkFields',\n    props: {\n        // 模态框的显示与隐藏\n        value: {\n            type: Boolean,\n            default: false,\n            required: true,\n        },\n        // 模态框的标题\n        title: {\n            type: String,\n            default: '选择条件字段',\n        },\n        // 字段数据\n        fields: {\n            type: Array,\n            required: true,\n        },\n        effectFields: {\n            type: Array,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            indeterminate: false,\n            checkAll: false,\n            checkAllGroup: [],\n        };\n    },\n    watch: {\n        effectFields: {\n            handler: function (val) {\n                if (val && val.length > 0) {\n                    this.checkAllGroup = this.effectFields.map(\n                        (list) => list.field_id\n                    );\n                    this.checkAllGroupChange(this.checkAllGroup);\n                } else {\n                    this.checkAllGroup = [];\n                }\n            },\n        },\n    },\n    methods: {\n        handleCheckAll() {\n            if (this.indeterminate) {\n                this.checkAll = false;\n            } else {\n                this.checkAll = !this.checkAll;\n            }\n            this.indeterminate = false;\n\n            if (this.checkAll) {\n                this.checkAllGroup = this.fields.map((list) => list.field_id);\n            } else {\n                this.checkAllGroup = [];\n            }\n        },\n        checkAllGroupChange(data) {\n            if (data.length === this.fields.length) {\n                this.indeterminate = false;\n                this.checkAll = true;\n            } else if (data.length > 0) {\n                this.indeterminate = true;\n                this.checkAll = false;\n            } else {\n                this.indeterminate = false;\n                this.checkAll = false;\n            }\n        },\n        close() {\n            this.$emit('input', false);\n        },\n        ok() {\n            let data = this.fields.filter((list) =>\n                this.checkAllGroup.includes(list.field_id)\n            );\n            this.$emit('finallyFields', data);\n        },\n    },\n};\n</script>\n<style lang=\"scss\">\n.checkFieldsModal {\n    .ivu-modal-content {\n        .ivu-modal-close {\n            top: 4px;\n            right: 4px;\n        }\n        .ivu-modal-header {\n            padding: 10px 12px;\n            font-size: 13px;\n            // background-color: #f8f8f8;\n            .ivu-modal-header-inner {\n                font-size: 13px;\n                font-weight: 700;\n            }\n        }\n        .ivu-modal-body {\n            font-size: 13px;\n            .ivu-checkbox-wrapper {\n                font-size: 13px;\n            }\n        }\n        .ivu-modal-footer {\n            padding: 10px 12px;\n            font-size: 13px;\n            // background-color: #f0f4f7;\n            button {\n                font-size: 13px;\n            }\n        }\n    }\n}\n</style>\n"]}]}